22 serialization::archive 19 0 0 0 0 40 /home/bluecore/Desktop/Pros/Main Project 40 /home/bluecore/Desktop/Pros/Main Project 0 0 258 0 0 0 746 /*
 * \file pros/llemu.h
 *
 * Legacy LCD Emulator
 *
 * This file defines a high-level API for emulating the three-button, UART-based
 * VEX LCD, containing a set of functions that facilitate the use of a software-
 * emulated version of the classic VEX LCD module.
 *
 * Visit https://pros.cs.purdue.edu/v5/tutorials/topical/llemu.html to learn
 * more.
 *
 * This file should not be modified by users, since it gets replaced whenever
 * a kernel upgrade occurs.
 *
 * \copyright Copyright (c) 2017-2023, Purdue University ACM SIGBots.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */ 1 1 21 4 18446744073709551615 1 # 23 1 23 2 18446744073709551615 6 ifndef 23 2 23 8 18446744073709551615 14 _PROS_LLEMU_H_ 23 9 23 23 18446744073709551615 1 # 24 1 24 2 18446744073709551615 6 define 24 2 24 8 18446744073709551615 14 _PROS_LLEMU_H_ 24 9 24 23 18446744073709551615 1 # 26 1 26 2 18446744073709551615 7 include 26 2 26 9 18446744073709551615 1 < 26 10 26 11 18446744073709551615 5 errno 26 11 26 16 18446744073709551615 1 . 26 16 26 17 18446744073709551615 1 h 26 17 26 18 18446744073709551615 1 > 26 18 26 19 18446744073709551615 1 # 27 1 27 2 18446744073709551615 7 include 27 2 27 9 18446744073709551615 1 < 27 10 27 11 18446744073709551615 7 stdbool 27 11 27 18 18446744073709551615 1 . 27 18 27 19 18446744073709551615 1 h 27 19 27 20 18446744073709551615 1 > 27 20 27 21 18446744073709551615 1 # 29 1 29 2 18446744073709551615 6 pragma 29 2 29 8 18446744073709551615 3 GCC 29 9 29 12 18446744073709551615 10 diagnostic 29 13 29 23 18446744073709551615 4 push 29 24 29 28 18446744073709551615 1 # 30 1 30 2 18446744073709551615 6 pragma 30 2 30 8 18446744073709551615 3 GCC 30 9 30 12 18446744073709551615 10 diagnostic 30 13 30 23 18446744073709551615 7 ignored 30 24 30 31 18446744073709551615 20 "-Wunused-parameter" 30 32 30 52 18446744073709551615 1 # 31 1 31 2 18446744073709551615 6 pragma 31 2 31 8 18446744073709551615 3 GCC 31 9 31 12 18446744073709551615 10 diagnostic 31 13 31 23 18446744073709551615 7 ignored 31 24 31 31 18446744073709551615 22 "-Wignored-qualifiers" 31 32 31 54 18446744073709551615 1 # 32 1 32 2 18446744073709551615 7 include 32 2 32 9 18446744073709551615 16 "display/lvgl.h" 32 10 32 26 18446744073709551615 1 # 33 1 33 2 18446744073709551615 6 pragma 33 2 33 8 18446744073709551615 3 GCC 33 9 33 12 18446744073709551615 10 diagnostic 33 13 33 23 18446744073709551615 3 pop 33 24 33 27 18446744073709551615 1 # 35 1 35 2 18446744073709551615 5 ifdef 35 2 35 7 18446744073709551615 11 __cplusplus 35 8 35 19 18446744073709551615 6 extern 36 1 36 7 18446744073709551615 3 "C" 36 8 36 11 18446744073709551615 1 { 36 12 36 13 18446744073709551615 9 namespace 37 1 37 10 18446744073709551615 4 pros 37 11 37 15 0 1 { 37 16 37 17 18446744073709551615 1 # 38 1 38 2 18446744073709551615 5 endif 38 2 38 7 18446744073709551615 7 typedef 40 1 40 8 18446744073709551615 4 void 40 9 40 13 18446744073709551615 1 ( 40 14 40 15 18446744073709551615 1 * 40 15 40 16 18446744073709551615 15 lcd_btn_cb_fn_t 40 16 40 31 1 1 ) 40 31 40 32 18446744073709551615 1 ( 40 32 40 33 18446744073709551615 4 void 40 33 40 37 18446744073709551615 1 ) 40 37 40 38 18446744073709551615 1 ; 40 38 40 39 18446744073709551615 1 # 42 1 42 2 18446744073709551615 6 define 42 2 42 8 18446744073709551615 12 LCD_BTN_LEFT 42 9 42 21 18446744073709551615 1 4 42 22 42 23 18446744073709551615 1 # 43 1 43 2 18446744073709551615 6 define 43 2 43 8 18446744073709551615 14 LCD_BTN_CENTER 43 9 43 23 18446744073709551615 1 2 43 24 43 25 18446744073709551615 1 # 44 1 44 2 18446744073709551615 6 define 44 2 44 8 18446744073709551615 13 LCD_BTN_RIGHT 44 9 44 22 18446744073709551615 1 1 44 23 44 24 18446744073709551615 7 typedef 46 1 46 8 18446744073709551615 6 struct 46 9 46 15 18446744073709551615 5 lcd_s 46 16 46 21 2 1 { 46 22 46 23 18446744073709551615 8 lv_obj_t 47 2 47 10 3 1 * 47 10 47 11 18446744073709551615 5 frame 47 12 47 17 4 1 ; 47 17 47 18 18446744073709551615 8 lv_obj_t 48 2 48 10 3 1 * 48 10 48 11 18446744073709551615 6 screen 48 12 48 18 5 1 ; 48 18 48 19 18446744073709551615 8 lv_obj_t 49 2 49 10 3 1 * 49 10 49 11 18446744073709551615 8 lcd_text 49 12 49 20 6 1 [ 49 20 49 21 18446744073709551615 1 8 49 21 49 22 18446744073709551615 1 ] 49 22 49 23 18446744073709551615 1 ; 49 23 49 24 18446744073709551615 8 lv_obj_t 50 2 50 10 3 1 * 50 10 50 11 18446744073709551615 13 btn_container 50 12 50 25 7 1 ; 50 25 50 26 18446744073709551615 8 lv_obj_t 51 2 51 10 3 1 * 51 10 51 11 18446744073709551615 4 btns 51 12 51 16 8 1 [ 51 16 51 17 18446744073709551615 1 3 51 17 51 18 18446744073709551615 1 ] 51 18 51 19 18446744073709551615 1 ; 51 19 51 20 18446744073709551615 39 // < 0 => left; 1 => center; 2 => right 51 33 51 72 18446744073709551615 15 lcd_btn_cb_fn_t 52 2 52 17 1 9 callbacks 52 18 52 27 9 1 [ 52 27 52 28 18446744073709551615 1 3 52 28 52 29 18446744073709551615 1 ] 52 29 52 30 18446744073709551615 1 ; 52 30 52 31 18446744073709551615 39 // < 0 => left; 1 => center; 2 => right 52 33 52 72 18446744073709551615 8 volatile 53 2 53 10 18446744073709551615 7 uint8_t 53 11 53 18 10 10 touch_bits 53 19 53 29 11 1 ; 53 29 53 30 18446744073709551615 43 // < 4 => left; 2 => center; 1 => right (no 53 33 53 76 18446744073709551615 22 // multitouch support) 54 33 54 55 18446744073709551615 1 } 55 1 55 2 18446744073709551615 7 lcd_s_t 55 3 55 10 12 1 ; 55 10 55 11 18446744073709551615 1 # 57 1 57 2 18446744073709551615 5 ifdef 57 2 57 7 18446744073709551615 11 __cplusplus 57 8 57 19 18446744073709551615 9 namespace 58 1 58 10 18446744073709551615 1 c 58 11 58 12 13 1 { 58 13 58 14 18446744073709551615 1 # 59 1 59 2 18446744073709551615 5 endif 59 2 59 7 18446744073709551615 153 /**
 * Checks whether the emulated three-button LCD has already been initialized.
 *
 * \return True if the LCD has been initialized or false if not.
 */ 61 1 65 4 18446744073709551615 4 bool 66 1 66 5 18446744073709551615 18 lcd_is_initialized 66 6 66 24 14 1 ( 66 24 66 25 14 4 void 66 25 66 29 18446744073709551615 1 ) 66 29 66 30 14 1 ; 66 30 66 31 18446744073709551615 195 /**
 * Creates an emulation of the three-button, UART-based VEX LCD on the display.
 *
 * \return True if the LCD was successfully initialized, or false if it has
 * already been initialized.
 */ 68 1 73 4 18446744073709551615 4 bool 74 1 74 5 18446744073709551615 14 lcd_initialize 74 6 74 20 15 1 ( 74 20 74 21 15 4 void 74 21 74 25 18446744073709551615 1 ) 74 25 74 26 15 1 ; 74 26 74 27 18446744073709551615 486 /**
 * Turns off the Legacy LCD Emulator.
 *
 * Calling this function will clear the entire display, and you will not be able
 * to call any further LLEMU functions until another call to lcd_initialize.
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The LCD has not been initialized. Call lcd_initialize() first.
 *
 * \return True if the operation was successful, or false otherwise, setting
 * errno values as specified above.
 */ 76 1 88 4 18446744073709551615 4 bool 89 1 89 5 18446744073709551615 12 lcd_shutdown 89 6 89 18 16 1 ( 89 18 89 19 16 4 void 89 19 89 23 18446744073709551615 1 ) 89 23 89 24 16 1 ; 89 24 89 25 18446744073709551615 607 /**
 * Displays a formatted string on the emulated three-button LCD screen.
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO  - The LCD has not been initialized. Call lcd_initialize() first.
 * EINVAL - The line number specified is not in the range [0-7]
 *
 * \param line
 *        The line on which to display the text [0-7]
 * \param fmt
 *        Format string
 * \param ...
 *        Optional list of arguments for the format string
 *
 * \return True if the operation was successful, or false otherwise, setting
 * errno values as specified above.
 */ 91 1 108 4 18446744073709551615 4 bool 109 1 109 5 18446744073709551615 9 lcd_print 109 6 109 15 17 1 ( 109 15 109 16 17 7 int16_t 109 16 109 23 18 4 line 109 24 109 28 19 1 , 109 28 109 29 17 5 const 109 30 109 35 18446744073709551615 4 char 109 36 109 40 18446744073709551615 1 * 109 40 109 41 18446744073709551615 3 fmt 109 42 109 45 20 1 , 109 45 109 46 17 3 ... 109 47 109 50 17 1 ) 109 50 109 51 17 1 ; 109 51 109 52 18446744073709551615 531 /**
 * Displays a string on the emulated three-button LCD screen.
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO  - The LCD has not been initialized. Call lcd_initialize() first.
 * EINVAL - The line number specified is not in the range [0-7]
 *
 * \param line
 *        The line on which to display the text [0-7]
 * \param text
 *        The text to display
 *
 * \return True if the operation was successful, or false otherwise, setting
 * errno values as specified above.
 */ 111 1 126 4 18446744073709551615 4 bool 127 1 127 5 18446744073709551615 12 lcd_set_text 127 6 127 18 21 1 ( 127 18 127 19 21 7 int16_t 127 19 127 26 18 4 line 127 27 127 31 22 1 , 127 31 127 32 21 5 const 127 33 127 38 18446744073709551615 4 char 127 39 127 43 18446744073709551615 1 * 127 43 127 44 18446744073709551615 4 text 127 45 127 49 23 1 ) 127 49 127 50 21 1 ; 127 50 127 51 18446744073709551615 416 /**
 * Clears the contents of the emulated three-button LCD screen.
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO  - The LCD has not been initialized. Call lcd_initialize() first.
 * EINVAL - The line number specified is not in the range [0-7]
 *
 * \return True if the operation was successful, or false otherwise, setting
 * errno values as specified above.
 */ 129 1 139 4 18446744073709551615 4 bool 140 1 140 5 18446744073709551615 9 lcd_clear 140 6 140 15 24 1 ( 140 15 140 16 24 4 void 140 16 140 20 18446744073709551615 1 ) 140 20 140 21 24 1 ; 140 21 140 22 18446744073709551615 472 /**
 * Clears the contents of a line of the emulated three-button LCD screen.
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO  - The LCD has not been initialized. Call lcd_initialize() first.
 * EINVAL - The line number specified is not in the range [0-7]
 *
 * \param line
 *        The line to clear
 *
 * \return True if the operation was successful, or false otherwise, setting
 * errno values as specified above.
 */ 142 1 155 4 18446744073709551615 4 bool 156 1 156 5 18446744073709551615 14 lcd_clear_line 156 6 156 20 25 1 ( 156 20 156 21 25 7 int16_t 156 21 156 28 18 4 line 156 29 156 33 26 1 ) 156 33 156 34 25 1 ; 156 34 156 35 18446744073709551615 567 /**
 * Registers a callback function for the leftmost button.
 *
 * When the leftmost button on the emulated three-button LCD is pressed, the
 * user-provided callback function will be invoked.
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO  - The LCD has not been initialized. Call lcd_initialize() first.
 *
 * \param cb
 *        A callback function of type lcd_btn_cb_fn_t (void (*cb)(void))
 *
 * \return True if the operation was successful, or false otherwise, setting
 * errno values as specified above.
 */ 158 1 173 4 18446744073709551615 4 bool 174 1 174 5 18446744073709551615 20 lcd_register_btn0_cb 174 6 174 26 27 1 ( 174 26 174 27 27 15 lcd_btn_cb_fn_t 174 27 174 42 1 2 cb 174 43 174 45 28 1 ) 174 45 174 46 27 1 ; 174 46 174 47 18446744073709551615 563 /**
 * Registers a callback function for the center button.
 *
 * When the center button on the emulated three-button LCD is pressed, the
 * user-provided callback function will be invoked.
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO  - The LCD has not been initialized. Call lcd_initialize() first.
 *
 * \param cb
 *        A callback function of type lcd_btn_cb_fn_t (void (*cb)(void))
 *
 * \return True if the operation was successful, or false otherwise, setting
 * errno values as specified above.
 */ 176 1 191 4 18446744073709551615 4 bool 192 1 192 5 18446744073709551615 20 lcd_register_btn1_cb 192 6 192 26 29 1 ( 192 26 192 27 29 15 lcd_btn_cb_fn_t 192 27 192 42 1 2 cb 192 43 192 45 30 1 ) 192 45 192 46 29 1 ; 192 46 192 47 18446744073709551615 569 /**
 * Registers a callback function for the rightmost button.
 *
 * When the rightmost button on the emulated three-button LCD is pressed, the
 * user-provided callback function will be invoked.
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO  - The LCD has not been initialized. Call lcd_initialize() first.
 *
 * \param cb
 *        A callback function of type lcd_btn_cb_fn_t (void (*cb)(void))
 *
 * \return True if the operation was successful, or false otherwise, setting
 * errno values as specified above.
 */ 194 1 209 4 18446744073709551615 4 bool 210 1 210 5 18446744073709551615 20 lcd_register_btn2_cb 210 6 210 26 31 1 ( 210 26 210 27 31 15 lcd_btn_cb_fn_t 210 27 210 42 1 2 cb 210 43 210 45 32 1 ) 210 45 210 46 31 1 ; 210 46 210 47 18446744073709551615 583 /**
 * Gets the button status from the emulated three-button LCD.
 *
 * The value returned is a 3-bit integer where 1 0 0 indicates the left button
 * is pressed, 0 1 0 indicates the center button is pressed, and 0 0 1
 * indicates the right button is pressed. 0 is returned if no buttons are
 * currently being pressed.
 *
 * Note that this function is provided for legacy API compatibility purposes,
 * with the caveat that the V5 touch screen does not actually support pressing
 * multiple points on the screen at the same time.
 *
 * \return The buttons pressed as a bit mask
 */ 212 1 225 4 18446744073709551615 7 uint8_t 226 1 226 8 10 16 lcd_read_buttons 226 9 226 25 33 1 ( 226 25 226 26 33 4 void 226 26 226 30 18446744073709551615 1 ) 226 30 226 31 33 1 ; 226 31 226 32 18446744073709551615 180 /**
 * Changes the color of the LCD background to a provided color expressed in
 * type lv_color_t.
 * 
 * \param color
 *        A color of type lv_color_t
 * 
 * \return void
 */ 228 1 236 4 18446744073709551615 4 void 237 1 237 5 18446744073709551615 24 lcd_set_background_color 237 6 237 30 34 1 ( 237 30 237 31 34 10 lv_color_t 237 31 237 41 35 5 color 237 42 237 47 36 1 ) 237 47 237 48 34 1 ; 237 48 237 49 18446744073709551615 172 /**
 * Changes the text color of the LCD to a provided color expressed in
 * type lv_color_t.
 *
 * \param color
 *        A color of type lv_color_t
 *
 * \return void
 */ 239 1 247 4 18446744073709551615 4 void 248 1 248 5 18446744073709551615 18 lcd_set_text_color 248 6 248 24 37 1 ( 248 24 248 25 37 10 lv_color_t 248 25 248 35 35 5 color 248 36 248 41 38 1 ) 248 41 248 42 37 1 ; 248 42 248 43 18446744073709551615 1 # 250 1 250 2 18446744073709551615 5 ifdef 250 2 250 7 18446744073709551615 11 __cplusplus 250 8 250 19 18446744073709551615 1 } 251 1 251 2 18446744073709551615 14 // namespace c 251 4 251 18 18446744073709551615 1 } 252 1 252 2 18446744073709551615 17 // namespace pros 252 4 252 21 18446744073709551615 1 } 253 1 253 2 18446744073709551615 1 # 254 1 254 2 18446744073709551615 5 endif 254 2 254 7 18446744073709551615 1 # 255 1 255 2 18446744073709551615 5 endif 255 2 255 7 18446744073709551615 17 // _PROS_LLEMU_H_ 255 9 255 26 18446744073709551615 0 0 39 0 0 0 22 0 0 1 13 0 4 pros 20 1 13 0 20 lcd_btn_cb_fn_t:pros 2 1 13 0 10 lcd_s:pros 20 1 13 0 8 lv_obj_t 6 1 13 0 16 frame:lcd_s:pros 6 1 13 0 17 screen:lcd_s:pros 6 1 13 0 19 lcd_text:lcd_s:pros 6 1 13 0 24 btn_container:lcd_s:pros 6 1 13 0 15 btns:lcd_s:pros 6 1 13 0 20 callbacks:lcd_s:pros 20 1 13 0 7 uint8_t 6 1 13 0 21 touch_bits:lcd_s:pros 20 1 13 0 12 lcd_s_t:pros 22 1 13 0 6 c:pros 8 1 13 0 25 lcd_is_initialized:c:pros 8 1 13 0 21 lcd_initialize:c:pros 8 1 13 0 19 lcd_shutdown:c:pros 8 1 13 0 16 lcd_print:c:pros 20 1 13 0 7 int16_t 10 1 13 0 68 109:24:/home/bluecore/Desktop/Pros/Main Project/include/pros/llemu.h 10 1 13 0 68 109:42:/home/bluecore/Desktop/Pros/Main Project/include/pros/llemu.h 8 1 13 0 19 lcd_set_text:c:pros 10 1 13 0 68 127:27:/home/bluecore/Desktop/Pros/Main Project/include/pros/llemu.h 10 1 13 0 68 127:45:/home/bluecore/Desktop/Pros/Main Project/include/pros/llemu.h 8 1 13 0 16 lcd_clear:c:pros 8 1 13 0 21 lcd_clear_line:c:pros 10 1 13 0 68 156:29:/home/bluecore/Desktop/Pros/Main Project/include/pros/llemu.h 8 1 13 0 27 lcd_register_btn0_cb:c:pros 10 1 13 0 68 174:43:/home/bluecore/Desktop/Pros/Main Project/include/pros/llemu.h 8 1 13 0 27 lcd_register_btn1_cb:c:pros 10 1 13 0 68 192:43:/home/bluecore/Desktop/Pros/Main Project/include/pros/llemu.h 8 1 13 0 27 lcd_register_btn2_cb:c:pros 10 1 13 0 68 210:43:/home/bluecore/Desktop/Pros/Main Project/include/pros/llemu.h 8 1 13 0 23 lcd_read_buttons:c:pros 8 1 13 0 31 lcd_set_background_color:c:pros 20 1 13 0 10 lv_color_t 10 1 13 0 68 237:42:/home/bluecore/Desktop/Pros/Main Project/include/pros/llemu.h 8 1 13 0 25 lcd_set_text_color:c:pros 10 1 13 0 68 248:36:/home/bluecore/Desktop/Pros/Main Project/include/pros/llemu.h 0 0 74 0 0 0 66 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_conf.h 1698321180 74 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_conf_checker.h 1698321184 75 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_core/lv_group.h 1698321188 75 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_core/lv_indev.h 1698321182 74 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_core/lv_lang.h 1698321176 73 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_core/lv_obj.h 1698321188 74 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_core/lv_refr.h 1698321178 75 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_core/lv_style.h 1698321182 73 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_core/lv_vdb.h 1698321184 74 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_draw/lv_draw.h 1698321184 78 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_draw/lv_draw_img.h 1698321186 80 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_draw/lv_draw_label.h 1698321178 79 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_draw/lv_draw_line.h 1698321178 79 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_draw/lv_draw_rect.h 1698321188 83 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_draw/lv_draw_triangle.h 1698321188 83 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_fonts/lv_font_builtin.h 1698321176 72 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_hal/lv_hal.h 1698321188 77 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_hal/lv_hal_disp.h 1698321180 78 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_hal/lv_hal_indev.h 1698321176 77 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_hal/lv_hal_tick.h 1698321178 74 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_misc/lv_anim.h 1698321188 74 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_misc/lv_area.h 1698321184 75 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_misc/lv_color.h 1698321178 74 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_misc/lv_font.h 1698321180 72 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_misc/lv_fs.h 1698321194 72 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_misc/lv_ll.h 1698321184 73 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_misc/lv_log.h 1698321182 73 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_misc/lv_mem.h 1698321186 80 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_misc/lv_symbol_def.h 1698321194 74 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_misc/lv_task.h 1698321194 73 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_misc/lv_txt.h 1698321182 73 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_arc.h 1698321180 73 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_bar.h 1698321182 73 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_btn.h 1698321186 74 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_btnm.h 1698321182 78 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_calendar.h 1698321192 76 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_canvas.h 1698321194 72 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_cb.h 1698321184 75 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_chart.h 1698321182 74 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_cont.h 1698321184 76 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_ddlist.h 1698321182 75 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_gauge.h 1698321184 73 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_img.h 1698321188 76 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_imgbtn.h 1698321180 72 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_kb.h 1698321178 75 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_label.h 1698321176 73 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_led.h 1698321178 74 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_line.h 1698321192 74 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_list.h 1698321176 76 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_lmeter.h 1698321180 74 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_mbox.h 1698321194 74 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_page.h 1698321182 77 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_preload.h 1698321186 76 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_roller.h 1698321184 76 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_slider.h 1698321184 77 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_spinbox.h 1698321186 72 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_sw.h 1698321176 72 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_ta.h 1698321178 75 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_table.h 1698321182 77 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_tabview.h 1698321182 78 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_tileview.h 1698321192 73 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_objx/lv_win.h 1698321194 77 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_themes/lv_theme.h 1698321184 83 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_themes/lv_theme_alien.h 1698321176 85 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_themes/lv_theme_default.h 1698321180 86 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_themes/lv_theme_material.h 1698321176 82 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_themes/lv_theme_mono.h 1698321178 82 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_themes/lv_theme_nemo.h 1698321194 83 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_themes/lv_theme_night.h 1698321186 83 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_themes/lv_theme_templ.h 1698321184 81 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_themes/lv_theme_zen.h 1698321182 69 /home/bluecore/Desktop/Pros/Main Project/include/display/lv_version.h 1698321186 63 /home/bluecore/Desktop/Pros/Main Project/include/display/lvgl.h 1698321176 61 /home/bluecore/Desktop/Pros/Main Project/include/pros/llemu.h 1698321178