22 serialization::archive 19 0 0 0 0 40 /home/bluecore/Desktop/Pros/Main Project 40 /home/bluecore/Desktop/Pros/Main Project 0 0 77 0 0 0 587 /**
 * \file pros/distance.h
 *
 * Contains prototypes for functions related to the VEX Distance sensor.
 *
 * Visit https://pros.cs.purdue.edu/v5/tutorials/topical/distance.html to learn
 * more.
 *
 * This file should not be modified by users, since it gets replaced whenever
 * a kernel upgrade occurs.
 *
 * \copyright Copyright (c) 2017-2023, Purdue University ACM SIGBots.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */ 1 1 17 4 18446744073709551615 1 # 19 1 19 2 18446744073709551615 6 ifndef 19 2 19 8 18446744073709551615 17 _PROS_DISTANCE_H_ 19 9 19 26 18446744073709551615 1 # 20 1 20 2 18446744073709551615 6 define 20 2 20 8 18446744073709551615 17 _PROS_DISTANCE_H_ 20 9 20 26 18446744073709551615 1 # 22 1 22 2 18446744073709551615 7 include 22 2 22 9 18446744073709551615 1 < 22 10 22 11 18446744073709551615 7 stdbool 22 11 22 18 18446744073709551615 1 . 22 18 22 19 18446744073709551615 1 h 22 19 22 20 18446744073709551615 1 > 22 20 22 21 18446744073709551615 1 # 23 1 23 2 18446744073709551615 7 include 23 2 23 9 18446744073709551615 1 < 23 10 23 11 18446744073709551615 6 stdint 23 11 23 17 18446744073709551615 1 . 23 17 23 18 18446744073709551615 1 h 23 18 23 19 18446744073709551615 1 > 23 19 23 20 18446744073709551615 1 # 25 1 25 2 18446744073709551615 5 ifdef 25 2 25 7 18446744073709551615 11 __cplusplus 25 8 25 19 18446744073709551615 6 extern 26 1 26 7 18446744073709551615 3 "C" 26 8 26 11 18446744073709551615 1 { 26 12 26 13 18446744073709551615 9 namespace 27 1 27 10 18446744073709551615 4 pros 27 11 27 15 0 1 { 27 16 27 17 18446744073709551615 9 namespace 28 1 28 10 18446744073709551615 1 c 28 11 28 12 1 1 { 28 13 28 14 18446744073709551615 1 # 29 1 29 2 18446744073709551615 5 endif 29 2 29 7 18446744073709551615 442 /**
 * Get the currently measured distance from the sensor in mm
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Distance Sensor
 *
 * \param  port The V5 Distance Sensor port number from 1-21
 * \return The distance value or PROS_ERR if the operation failed, setting
 * errno.
 */ 31 1 42 4 18446744073709551615 7 int32_t 43 1 43 8 2 12 distance_get 43 9 43 21 3 1 ( 43 21 43 22 3 7 uint8_t 43 22 43 29 4 4 port 43 30 43 34 5 1 ) 43 34 43 35 3 1 ; 43 35 43 36 18446744073709551615 647 /**
 * Get the confidence in the distance reading
 *
 * This is a value that has a range of 0 to 63. 63 means high confidence,
 * lower values imply less confidence. Confidence is only available
 * when distance is > 200mm (the value 10 is returned in this scenario).
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Distance Sensor
 *
 * \param  port The V5 Distance Sensor port number from 1-21
 * \return The confidence value or PROS_ERR if the operation failed, setting
 * errno.
 */ 45 1 60 4 18446744073709551615 7 int32_t 61 1 61 8 2 23 distance_get_confidence 61 9 61 32 6 1 ( 61 32 61 33 6 7 uint8_t 61 33 61 40 4 4 port 61 41 61 45 7 1 ) 61 45 61 46 6 1 ; 61 46 61 47 18446744073709551615 572 /**
 * Get the current guess at relative object size
 *
 * This is a value that has a range of 0 to 400.
 * A 18" x 30" grey card will return a value of approximately 75
 * in typical room lighting.
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Distance Sensor
 *
 * \param  port The V5 Distance Sensor port number from 1-21
 * \return The size value or PROS_ERR if the operation failed, setting
 * errno.
 */ 63 1 78 4 18446744073709551615 7 int32_t 79 1 79 8 2 24 distance_get_object_size 79 9 79 33 8 1 ( 79 33 79 34 8 7 uint8_t 79 34 79 41 4 4 port 79 42 79 46 9 1 ) 79 46 79 47 8 1 ; 79 47 79 48 18446744073709551615 415 /**
 * Get the object velocity in m/s
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Distance Sensor
 *
 * \param  port The V5 Distance Sensor port number from 1-21
 * \return The velocity value or PROS_ERR if the operation failed, setting
 * errno.
 */ 81 1 92 4 18446744073709551615 6 double 93 1 93 7 18446744073709551615 28 distance_get_object_velocity 93 8 93 36 10 1 ( 93 36 93 37 10 7 uint8_t 93 37 93 44 4 4 port 93 45 93 49 11 1 ) 93 49 93 50 10 1 ; 93 50 93 51 18446744073709551615 1 # 95 1 95 2 18446744073709551615 5 ifdef 95 2 95 7 18446744073709551615 11 __cplusplus 95 8 95 19 18446744073709551615 1 } 96 1 96 2 18446744073709551615 1 } 97 1 97 2 18446744073709551615 1 } 98 1 98 2 18446744073709551615 1 # 99 1 99 2 18446744073709551615 5 endif 99 2 99 7 18446744073709551615 1 # 101 1 101 2 18446744073709551615 5 endif 101 2 101 7 18446744073709551615 0 0 12 0 0 0 22 0 0 1 13 0 4 pros 22 1 13 0 6 c:pros 20 1 13 0 7 int32_t 8 1 13 0 19 distance_get:c:pros 20 1 13 0 7 uint8_t 10 1 13 0 70 43:30:/home/bluecore/Desktop/Pros/Main Project/include/pros/distance.h 8 1 13 0 30 distance_get_confidence:c:pros 10 1 13 0 70 61:41:/home/bluecore/Desktop/Pros/Main Project/include/pros/distance.h 8 1 13 0 31 distance_get_object_size:c:pros 10 1 13 0 70 79:42:/home/bluecore/Desktop/Pros/Main Project/include/pros/distance.h 8 1 13 0 35 distance_get_object_velocity:c:pros 10 1 13 0 70 93:45:/home/bluecore/Desktop/Pros/Main Project/include/pros/distance.h 0 0 1 0 0 0 64 /home/bluecore/Desktop/Pros/Main Project/include/pros/distance.h 1698321188