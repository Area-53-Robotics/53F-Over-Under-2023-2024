22 serialization::archive 19 0 0 0 0 40 /home/bluecore/Desktop/Pros/Main Project 40 /home/bluecore/Desktop/Pros/Main Project 0 0 281 0 0 0 580 /**
 * \file pros/optical.h
 *
 * Contains prototypes for functions related to the VEX Optical sensor.
 *
 * Visit https://pros.cs.purdue.edu/v5/tutorials/topical/imu.html to learn
 * more.
 *
 * This file should not be modified by users, since it gets replaced whenever
 * a kernel upgrade occurs.
 *
 * \copyright Copyright (c) 2017-2023, Purdue University ACM SIGBots.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */ 1 1 17 4 18446744073709551615 1 # 19 1 19 2 18446744073709551615 6 ifndef 19 2 19 8 18446744073709551615 16 _PROS_OPTICAL_H_ 19 9 19 25 18446744073709551615 1 # 20 1 20 2 18446744073709551615 6 define 20 2 20 8 18446744073709551615 16 _PROS_OPTICAL_H_ 20 9 20 25 18446744073709551615 1 # 22 1 22 2 18446744073709551615 7 include 22 2 22 9 18446744073709551615 1 < 22 10 22 11 18446744073709551615 7 stdbool 22 11 22 18 18446744073709551615 1 . 22 18 22 19 18446744073709551615 1 h 22 19 22 20 18446744073709551615 1 > 22 20 22 21 18446744073709551615 1 # 23 1 23 2 18446744073709551615 7 include 23 2 23 9 18446744073709551615 1 < 23 10 23 11 18446744073709551615 6 stdint 23 11 23 17 18446744073709551615 1 . 23 17 23 18 18446744073709551615 1 h 23 18 23 19 18446744073709551615 1 > 23 19 23 20 18446744073709551615 1 # 24 1 24 2 18446744073709551615 7 include 24 2 24 9 18446744073709551615 9 "error.h" 24 10 24 19 18446744073709551615 1 # 26 1 26 2 18446744073709551615 6 define 26 2 26 8 18446744073709551615 15 OPT_GESTURE_ERR 26 9 26 24 18446744073709551615 1 ( 26 25 26 26 18446744073709551615 8 INT8_MAX 26 26 26 34 18446744073709551615 1 ) 26 34 26 35 18446744073709551615 1 # 27 1 27 2 18446744073709551615 6 define 27 2 27 8 18446744073709551615 13 OPT_COUNT_ERR 27 9 27 22 18446744073709551615 1 ( 27 23 27 24 18446744073709551615 9 INT16_MAX 27 24 27 33 18446744073709551615 1 ) 27 33 27 34 18446744073709551615 1 # 28 1 28 2 18446744073709551615 6 define 28 2 28 8 18446744073709551615 12 OPT_TIME_ERR 28 9 28 21 18446744073709551615 8 PROS_ERR 28 22 28 30 18446744073709551615 1 # 30 1 30 2 18446744073709551615 5 ifdef 30 2 30 7 18446744073709551615 11 __cplusplus 30 8 30 19 18446744073709551615 6 extern 31 1 31 7 18446744073709551615 3 "C" 31 8 31 11 18446744073709551615 1 { 31 12 31 13 18446744073709551615 9 namespace 32 1 32 10 18446744073709551615 4 pros 32 11 32 15 0 1 { 32 16 32 17 18446744073709551615 9 namespace 33 1 33 10 18446744073709551615 1 c 33 11 33 12 1 1 { 33 13 33 14 18446744073709551615 1 # 34 1 34 2 18446744073709551615 5 endif 34 2 34 7 18446744073709551615 7 typedef 37 1 37 8 18446744073709551615 4 enum 37 9 37 13 18446744073709551615 19 optical_direction_e 37 14 37 33 2 1 { 37 34 37 35 18446744073709551615 10 NO_GESTURE 38 2 38 12 3 1 = 38 13 38 14 18446744073709551615 1 0 38 15 38 16 18446744073709551615 1 , 38 16 38 17 18446744073709551615 2 UP 39 2 39 4 4 1 = 39 5 39 6 18446744073709551615 1 1 39 7 39 8 18446744073709551615 1 , 39 8 39 9 18446744073709551615 4 DOWN 40 2 40 6 5 1 = 40 7 40 8 18446744073709551615 1 2 40 9 40 10 18446744073709551615 1 , 40 10 40 11 18446744073709551615 5 RIGHT 41 2 41 7 6 1 = 41 8 41 9 18446744073709551615 1 3 41 10 41 11 18446744073709551615 1 , 41 11 41 12 18446744073709551615 4 LEFT 42 2 42 6 7 1 = 42 7 42 8 18446744073709551615 1 4 42 9 42 10 18446744073709551615 1 , 42 10 42 11 18446744073709551615 5 ERROR 43 2 43 7 8 1 = 43 8 43 9 18446744073709551615 8 PROS_ERR 43 10 43 18 8 1 } 44 1 44 2 18446744073709551615 21 optical_direction_e_t 44 3 44 24 9 1 ; 44 24 44 25 18446744073709551615 7 typedef 46 1 46 8 18446744073709551615 6 struct 46 9 46 15 18446744073709551615 13 optical_rgb_s 46 16 46 29 10 1 { 46 30 46 31 18446744073709551615 6 double 47 2 47 8 18446744073709551615 3 red 47 9 47 12 11 1 ; 47 12 47 13 18446744073709551615 6 double 48 2 48 8 18446744073709551615 5 green 48 9 48 14 12 1 ; 48 14 48 15 18446744073709551615 6 double 49 2 49 8 18446744073709551615 4 blue 49 9 49 13 13 1 ; 49 13 49 14 18446744073709551615 6 double 50 2 50 8 18446744073709551615 10 brightness 50 9 50 19 14 1 ; 50 19 50 20 18446744073709551615 1 } 51 1 51 2 18446744073709551615 15 optical_rgb_s_t 51 3 51 18 15 1 ; 51 18 51 19 18446744073709551615 7 typedef 53 1 53 8 18446744073709551615 6 struct 53 9 53 15 18446744073709551615 13 optical_raw_s 53 16 53 29 16 1 { 53 30 53 31 18446744073709551615 8 uint32_t 54 2 54 10 17 5 clear 54 11 54 16 18 1 ; 54 16 54 17 18446744073709551615 8 uint32_t 55 2 55 10 17 3 red 55 11 55 14 19 1 ; 55 14 55 15 18446744073709551615 8 uint32_t 56 2 56 10 17 5 green 56 11 56 16 20 1 ; 56 16 56 17 18446744073709551615 8 uint32_t 57 2 57 10 17 4 blue 57 11 57 15 21 1 ; 57 15 57 16 18446744073709551615 1 } 58 1 58 2 18446744073709551615 15 optical_raw_s_t 58 3 58 18 22 1 ; 58 18 58 19 18446744073709551615 7 typedef 60 1 60 8 18446744073709551615 6 struct 60 9 60 15 18446744073709551615 17 optical_gesture_s 60 16 60 33 23 1 { 60 34 60 35 18446744073709551615 7 uint8_t 61 2 61 9 24 5 udata 61 10 61 15 25 1 ; 61 15 61 16 18446744073709551615 7 uint8_t 62 2 62 9 24 5 ddata 62 10 62 15 26 1 ; 62 15 62 16 18446744073709551615 7 uint8_t 63 2 63 9 24 5 ldata 63 10 63 15 27 1 ; 63 15 63 16 18446744073709551615 7 uint8_t 64 2 64 9 24 5 rdata 64 10 64 15 28 1 ; 64 15 64 16 18446744073709551615 7 uint8_t 65 2 65 9 24 4 type 65 10 65 14 29 1 ; 65 14 65 15 18446744073709551615 7 uint8_t 66 2 66 9 24 3 pad 66 10 66 13 30 1 ; 66 13 66 14 18446744073709551615 8 uint16_t 67 2 67 10 31 5 count 67 11 67 16 32 1 ; 67 16 67 17 18446744073709551615 8 uint32_t 68 2 68 10 17 4 time 68 11 68 15 33 1 ; 68 15 68 16 18446744073709551615 1 } 69 1 69 2 18446744073709551615 19 optical_gesture_s_t 69 3 69 22 34 1 ; 69 22 69 23 18446744073709551615 538 /**
 * Get the detected color hue
 *
 * This is not available if gestures are being detected. Hue has a
 * range of 0 to 359.999
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Optical Sensor
 *
 * \param port
 *        The V5 Optical Sensor port number from 1-21
 * \return hue value if the operation was successful or PROS_ERR_F if the operation
 * failed, setting errno.
 */ 71 1 86 4 18446744073709551615 6 double 87 1 87 7 18446744073709551615 15 optical_get_hue 87 8 87 23 35 1 ( 87 23 87 24 35 7 uint8_t 87 24 87 31 24 4 port 87 32 87 36 36 1 ) 87 36 87 37 35 1 ; 87 37 87 38 18446744073709551615 555 /**
 * Get the detected color saturation
 *
 * This is not available if gestures are being detected. Saturation has a
 * range of 0 to 1.0
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Optical Sensor
 *
 * \param port
 *        The V5 Optical Sensor port number from 1-21
 * \return saturation value if the operation was successful or PROS_ERR_F if
 * the operation failed, setting errno.
 */ 89 1 104 4 18446744073709551615 6 double 105 1 105 7 18446744073709551615 22 optical_get_saturation 105 8 105 30 37 1 ( 105 30 105 31 37 7 uint8_t 105 31 105 38 24 4 port 105 39 105 43 38 1 ) 105 43 105 44 37 1 ; 105 44 105 45 18446744073709551615 555 /**
 * Get the detected color brightness
 *
 * This is not available if gestures are being detected. Brightness has a
 * range of 0 to 1.0
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Optical Sensor
 *
 * \param port
 *        The V5 Optical Sensor port number from 1-21
 * \return brightness value if the operation was successful or PROS_ERR_F if
 * the operation failed, setting errno.
 */ 107 1 122 4 18446744073709551615 6 double 123 1 123 7 18446744073709551615 22 optical_get_brightness 123 8 123 30 39 1 ( 123 30 123 31 39 7 uint8_t 123 31 123 38 24 4 port 123 39 123 43 40 1 ) 123 43 123 44 39 1 ; 123 44 123 45 18446744073709551615 550 /**
 * Get the detected proximity value
 *
 * This is not available if gestures are being detected. proximity has
 * a range of 0 to 255.
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Optical Sensor
 *
 * \param port
 *        The V5 Optical Sensor port number from 1-21
 * \return poximity value if the operation was successful or PROS_ERR if
 * the operation failed, setting errno.
 */ 125 1 140 4 18446744073709551615 7 int32_t 141 1 141 8 41 21 optical_get_proximity 141 9 141 30 42 1 ( 141 30 141 31 42 7 uint8_t 141 31 141 38 24 4 port 141 39 141 43 43 1 ) 141 43 141 44 42 1 ; 141 44 141 45 18446744073709551615 478 /**
 * Set the pwm value of the White LED
 *
 * value that ranges from 0 to 100
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Optical Sensor
 *
 * \param port
 *        The V5 Optical Sensor port number from 1-21
 * \return 1 if the operation is successful or PROS_ERR if the operation failed,
 * setting errno.
 */ 143 1 157 4 18446744073709551615 7 int32_t 158 1 158 8 41 19 optical_set_led_pwm 158 9 158 28 44 1 ( 158 28 158 29 44 7 uint8_t 158 29 158 36 24 4 port 158 37 158 41 45 1 , 158 41 158 42 44 7 uint8_t 158 43 158 50 24 5 value 158 51 158 56 46 1 ) 158 56 158 57 44 1 ; 158 57 158 58 18446744073709551615 483 /**
 * Get the pwm value of the White LED
 *
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Optical Sensor
 *
 * \param port
 *        The V5 Optical Sensor port number from 1-21
 * \return LED pwm value that ranges from 0 to 100 if the operation was 
 * successful or PROS_ERR if the operation failed, setting errno.
 */ 160 1 173 4 18446744073709551615 7 int32_t 174 1 174 8 41 19 optical_get_led_pwm 174 9 174 28 47 1 ( 174 28 174 29 47 7 uint8_t 174 29 174 36 24 4 port 174 37 174 41 48 1 ) 174 41 174 42 47 1 ; 174 42 174 43 18446744073709551615 500 /**
 * Get the processed RGBC data from the sensor
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Optical Sensor
 *
 * \param port
 *        The V5 Optical Sensor port number from 1-21
 * \return rgb value if the operation was successful or an optical_rgb_s_t with
 * all fields set to PROS_ERR if the operation failed, setting errno.
 */ 176 1 188 4 18446744073709551615 15 optical_rgb_s_t 189 1 189 16 15 15 optical_get_rgb 189 17 189 32 49 1 ( 189 32 189 33 49 7 uint8_t 189 33 189 40 24 4 port 189 41 189 45 50 1 ) 189 45 189 46 49 1 ; 189 46 189 47 18446744073709551615 512 /**
 * Get the raw, unprocessed RGBC data from the sensor
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Optical Sensor
 *
 * \param port
 *        The V5 Optical Sensor port number from 1-21
 * \return raw rgb value if the operation was successful or an optical_raw_s_t 
 * with all fields set to PROS_ERR if the operation failed, setting errno.
 */ 191 1 203 4 18446744073709551615 15 optical_raw_s_t 204 1 204 16 22 15 optical_get_raw 204 17 204 32 51 1 ( 204 32 204 33 51 7 uint8_t 204 33 204 40 24 4 port 204 41 204 45 52 1 ) 204 45 204 46 51 1 ; 204 46 204 47 18446744073709551615 510 /**
 * Get the most recent gesture data from the sensor
 *
 * Gestures will be cleared after 500mS
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Optical Sensor
 *
 * \param port
 *        The V5 Optical Sensor port number from 1-21
 * \return gesture value if the operation was successful or PROS_ERR if
 * the operation failed, setting errno.
 */ 206 1 220 4 18446744073709551615 21 optical_direction_e_t 221 1 221 22 9 19 optical_get_gesture 221 23 221 42 53 1 ( 221 42 221 43 53 7 uint8_t 221 43 221 50 24 4 port 221 51 221 55 54 1 ) 221 55 221 56 53 1 ; 221 56 221 57 18446744073709551615 518 /**
 * Get the most recent raw gesture data from the sensor
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Optical Sensor
 *
 * \param port
 *        The V5 Optical Sensor port number from 1-21
 * \return gesture value if the operation was successful or an optical_gesture_s_t 
 * with all fields set to PROS_ERR if the operation failed, setting errno.
 */ 223 1 235 4 18446744073709551615 19 optical_gesture_s_t 236 1 236 20 34 23 optical_get_gesture_raw 236 21 236 44 55 1 ( 236 44 236 45 55 7 uint8_t 236 45 236 52 24 4 port 236 53 236 57 56 1 ) 236 57 236 58 55 1 ; 236 58 236 59 18446744073709551615 444 /**
 * Enable gesture detection on the sensor
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Optical Sensor
 *
 * \param port
 *        The V5 Optical Sensor port number from 1-21
 * \return 1 if the operation is successful or PROS_ERR if the operation failed,
 * setting errno.
 */ 238 1 250 4 18446744073709551615 7 int32_t 251 1 251 8 41 22 optical_enable_gesture 251 9 251 31 57 1 ( 251 31 251 32 57 7 uint8_t 251 32 251 39 24 4 port 251 40 251 44 58 1 ) 251 44 251 45 57 1 ; 251 45 251 46 18446744073709551615 445 /**
 * Disable gesture detection on the sensor
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Optical Sensor
 *
 * \param port
 *        The V5 Optical Sensor port number from 1-21
 * \return 1 if the operation is successful or PROS_ERR if the operation failed,
 * setting errno.
 */ 253 1 265 4 18446744073709551615 7 int32_t 266 1 266 8 41 23 optical_disable_gesture 266 9 266 32 59 1 ( 266 32 266 33 59 7 uint8_t 266 33 266 40 24 4 port 266 41 266 45 60 1 ) 266 45 266 46 59 1 ; 266 46 266 47 18446744073709551615 539 /**
 * Get integration time (update rate) of the optical sensor in milliseconds, with
 * minimum time being 
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Optical Sensor
 *
 * \param port
 *        The V5 Optical Sensor port number from 1-21
 * \return Integration time in milliseconds if the operation is successful 
 * or PROS_ERR if the operation failed, setting errno.
 */ 268 1 281 4 18446744073709551615 6 double 282 1 282 7 18446744073709551615 28 optical_get_integration_time 282 8 282 36 61 1 ( 282 36 282 37 61 7 uint8_t 282 37 282 44 24 4 port 282 45 282 49 62 1 ) 282 49 282 50 61 1 ; 282 50 282 51 18446744073709551615 549 /**
 * Set integration time (update rate) of the optical sensor in milliseconds.
 *
 * This function uses the following values of errno when an error state is
 * reached:
 * ENXIO - The given value is not within the range of V5 ports (1-21).
 * ENODEV - The port cannot be configured as an Optical Sensor
 *
 * \param port
 *        The V5 Optical Sensor port number from 1-21
 * \param time
 *        The desired integration time in milliseconds
 * \return 1 if the operation is successful or PROS_ERR if the operation failed,
 * setting errno.
 */ 284 1 298 4 18446744073709551615 7 int32_t 299 1 299 8 41 28 optical_set_integration_time 299 9 299 37 63 1 ( 299 37 299 38 63 7 uint8_t 299 38 299 45 24 4 port 299 46 299 50 64 1 , 299 50 299 51 63 6 double 299 52 299 58 18446744073709551615 4 time 299 59 299 63 65 1 ) 299 63 299 64 63 1 ; 299 64 299 65 18446744073709551615 1 # 301 1 301 2 18446744073709551615 5 ifdef 301 2 301 7 18446744073709551615 11 __cplusplus 301 8 301 19 18446744073709551615 1 } 302 1 302 2 18446744073709551615 1 } 303 1 303 2 18446744073709551615 1 } 304 1 304 2 18446744073709551615 1 # 305 1 305 2 18446744073709551615 5 endif 305 2 305 7 18446744073709551615 1 # 307 1 307 2 18446744073709551615 5 endif 307 2 307 7 18446744073709551615 0 0 66 0 0 0 22 0 0 1 13 0 4 pros 22 1 13 0 6 c:pros 5 1 13 0 26 optical_direction_e:c:pros 7 1 13 0 37 NO_GESTURE:optical_direction_e:c:pros 7 1 13 0 29 UP:optical_direction_e:c:pros 7 1 13 0 31 DOWN:optical_direction_e:c:pros 7 1 13 0 32 RIGHT:optical_direction_e:c:pros 7 1 13 0 31 LEFT:optical_direction_e:c:pros 7 1 13 0 32 ERROR:optical_direction_e:c:pros 20 1 13 0 28 optical_direction_e_t:c:pros 2 1 13 0 20 optical_rgb_s:c:pros 6 1 13 0 24 red:optical_rgb_s:c:pros 6 1 13 0 26 green:optical_rgb_s:c:pros 6 1 13 0 25 blue:optical_rgb_s:c:pros 6 1 13 0 31 brightness:optical_rgb_s:c:pros 20 1 13 0 22 optical_rgb_s_t:c:pros 2 1 13 0 20 optical_raw_s:c:pros 20 1 13 0 8 uint32_t 6 1 13 0 26 clear:optical_raw_s:c:pros 6 1 13 0 24 red:optical_raw_s:c:pros 6 1 13 0 26 green:optical_raw_s:c:pros 6 1 13 0 25 blue:optical_raw_s:c:pros 20 1 13 0 22 optical_raw_s_t:c:pros 2 1 13 0 24 optical_gesture_s:c:pros 20 1 13 0 7 uint8_t 6 1 13 0 30 udata:optical_gesture_s:c:pros 6 1 13 0 30 ddata:optical_gesture_s:c:pros 6 1 13 0 30 ldata:optical_gesture_s:c:pros 6 1 13 0 30 rdata:optical_gesture_s:c:pros 6 1 13 0 29 type:optical_gesture_s:c:pros 6 1 13 0 28 pad:optical_gesture_s:c:pros 20 1 13 0 8 uint16_t 6 1 13 0 30 count:optical_gesture_s:c:pros 6 1 13 0 29 time:optical_gesture_s:c:pros 20 1 13 0 26 optical_gesture_s_t:c:pros 8 1 13 0 22 optical_get_hue:c:pros 10 1 13 0 69 87:32:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 8 1 13 0 29 optical_get_saturation:c:pros 10 1 13 0 70 105:39:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 8 1 13 0 29 optical_get_brightness:c:pros 10 1 13 0 70 123:39:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 20 1 13 0 7 int32_t 8 1 13 0 28 optical_get_proximity:c:pros 10 1 13 0 70 141:39:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 8 1 13 0 26 optical_set_led_pwm:c:pros 10 1 13 0 70 158:37:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 10 1 13 0 70 158:51:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 8 1 13 0 26 optical_get_led_pwm:c:pros 10 1 13 0 70 174:37:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 8 1 13 0 22 optical_get_rgb:c:pros 10 1 13 0 70 189:41:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 8 1 13 0 22 optical_get_raw:c:pros 10 1 13 0 70 204:41:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 8 1 13 0 26 optical_get_gesture:c:pros 10 1 13 0 70 221:51:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 8 1 13 0 30 optical_get_gesture_raw:c:pros 10 1 13 0 70 236:53:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 8 1 13 0 29 optical_enable_gesture:c:pros 10 1 13 0 70 251:40:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 8 1 13 0 30 optical_disable_gesture:c:pros 10 1 13 0 70 266:41:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 8 1 13 0 35 optical_get_integration_time:c:pros 10 1 13 0 70 282:45:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 8 1 13 0 35 optical_set_integration_time:c:pros 10 1 13 0 70 299:46:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 10 1 13 0 70 299:59:/home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 0 0 1 0 0 0 63 /home/bluecore/Desktop/Pros/Main Project/include/pros/optical.h 1698321180